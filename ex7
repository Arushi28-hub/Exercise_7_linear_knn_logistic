import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.linear_model import LinearRegression, LogisticRegression
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import mean_squared_error, accuracy_score
import seaborn as sns
import matplotlib.pyplot as plt

# Load the dataset
data = pd.read_csv('bestsellers.csv')

# Encode Genre
data['Genre_encoded'] = LabelEncoder().fit_transform(data['Genre'])

# Prepare features and targets
X = data[['Reviews', 'Price', 'Year']]
y_rating = data['Rating']
y_genre = data['Genre_encoded']

# Split data for both tasks
X_train, X_test, y_rating_train, y_rating_test = train_test_split(X, y_rating, test_size=0.2, random_state=42)
_, _, y_genre_train, y_genre_test = train_test_split(X, y_genre, test_size=0.2, random_state=42)

# Scale the features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Models
lr = LinearRegression().fit(X_train_scaled, y_rating_train)
knn = KNeighborsRegressor(n_neighbors=5).fit(X_train_scaled, y_rating_train)
log_reg = LogisticRegression().fit(X_train_scaled, y_genre_train)

# Predictions
y_lr_pred = lr.predict(X_test_scaled)
y_knn_pred = knn.predict(X_test_scaled)
y_log_reg_pred = log_reg.predict(X_test_scaled)

# Metrics
print(f"Linear Regression - MSE: {mean_squared_error(y_rating_test, y_lr_pred):.2f}")
print(f"KNN Regression - MSE: {mean_squared_error(y_rating_test, y_knn_pred):.2f}")
print(f"Logistic Regression - Accuracy: {accuracy_score(y_genre_test, y_log_reg_pred):.2%}")

# Plotting
plt.figure(figsize=(15, 5))

# Linear Regression
plt.subplot(1, 3, 1)
sns.scatterplot(x=y_rating_test, y=y_lr_pred, color='blue')
plt.plot([y_rating_test.min(), y_rating_test.max()], [y_rating_test.min(), y_rating_test.max()], 'r--')
plt.title('Linear Regression')
plt.xlabel('Actual')
plt.ylabel('Predicted')

# KNN Regression
plt.subplot(1, 3, 2)
sns.scatterplot(x=y_rating_test, y=y_knn_pred, color='green')
plt.plot([y_rating_test.min(), y_rating_test.max()], [y_rating_test.min(), y_rating_test.max()], 'r--')
plt.title('KNN Regression')
plt.xlabel('Actual')
plt.ylabel('Predicted')

# Logistic Regression
plt.subplot(1, 3, 3)
sns.scatterplot(x=y_genre_test, y=y_log_reg_pred, color='purple')
plt.title('Logistic Regression')
plt.xlabel('Actual Genre')
plt.ylabel('Predicted Genre')

plt.tight_layout()
plt.show()

